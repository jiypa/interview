const l=JSON.parse(`{"key":"v-2d0a9a6d","path":"/js/","title":"面试题典","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. 介绍 js 的基本数据类型。","slug":"_1-介绍-js-的基本数据类型。","link":"#_1-介绍-js-的基本数据类型。","children":[]},{"level":2,"title":"==2. JavaScript 有几种类型的值？==","slug":"_2-javascript-有几种类型的值","link":"#_2-javascript-有几种类型的值","children":[]},{"level":2,"title":"3. 什么是堆？什么是栈？它们之间有什么区别和联系？","slug":"_3-什么是堆-什么是栈-它们之间有什么区别和联系","link":"#_3-什么是堆-什么是栈-它们之间有什么区别和联系","children":[]},{"level":2,"title":"4. 内部属性 [[Class]] 是什么？","slug":"_4-内部属性-class-是什么","link":"#_4-内部属性-class-是什么","children":[]},{"level":2,"title":"5. 介绍 js 有哪些内置对象？","slug":"_5-介绍-js-有哪些内置对象","link":"#_5-介绍-js-有哪些内置对象","children":[]},{"level":2,"title":"6. undefined 与 undeclared 的区别？","slug":"_6-undefined-与-undeclared-的区别","link":"#_6-undefined-与-undeclared-的区别","children":[]},{"level":2,"title":"7. null 和 undefined 的区别？","slug":"_7-null-和-undefined-的区别","link":"#_7-null-和-undefined-的区别","children":[]},{"level":2,"title":"8. 如何获取安全的 undefined 值？（暂时不看）","slug":"_8-如何获取安全的-undefined-值-暂时不看","link":"#_8-如何获取安全的-undefined-值-暂时不看","children":[]},{"level":2,"title":"9. 说几条写 JavaScript 的基本规范？","slug":"_9-说几条写-javascript-的基本规范","link":"#_9-说几条写-javascript-的基本规范","children":[]},{"level":2,"title":"==10. 什么是原型&原型链？==","slug":"_10-什么是原型-原型链","link":"#_10-什么是原型-原型链","children":[]},{"level":2,"title":"11. js 获取原型的方法？","slug":"_11-js-获取原型的方法","link":"#_11-js-获取原型的方法","children":[]},{"level":2,"title":"12. 在 js 中不同进制数字的表示方式","slug":"_12-在-js-中不同进制数字的表示方式","link":"#_12-在-js-中不同进制数字的表示方式","children":[]},{"level":2,"title":"13. js 中整数的安全范围是多少？——MAX_SAFE_INTEGER&MIN_SAFE_INTEGER","slug":"_13-js-中整数的安全范围是多少-——max-safe-integer-min-safe-integer","link":"#_13-js-中整数的安全范围是多少-——max-safe-integer-min-safe-integer","children":[]},{"level":2,"title":"14. typeof NaN 的结果是什么？","slug":"_14-typeof-nan-的结果是什么","link":"#_14-typeof-nan-的结果是什么","children":[]},{"level":2,"title":"15. isNaN 和 Number.isNaN 函数的区别？","slug":"_15-isnan-和-number-isnan-函数的区别","link":"#_15-isnan-和-number-isnan-函数的区别","children":[]},{"level":2,"title":"16. Array 构造函数只有一个参数值时的表现？","slug":"_16-array-构造函数只有一个参数值时的表现","link":"#_16-array-构造函数只有一个参数值时的表现","children":[]},{"level":2,"title":"17. 其他值到字符串的转换规则？","slug":"_17-其他值到字符串的转换规则","link":"#_17-其他值到字符串的转换规则","children":[]},{"level":2,"title":"18. 其他值到数字值的转换规则？","slug":"_18-其他值到数字值的转换规则","link":"#_18-其他值到数字值的转换规则","children":[]},{"level":2,"title":"19. 其他值到布尔类型的值的转换规则？","slug":"_19-其他值到布尔类型的值的转换规则","link":"#_19-其他值到布尔类型的值的转换规则","children":[]},{"level":2,"title":"20. {} 和 [] 的 valueOf 和 toString 的结果是什么？","slug":"_20-和-的-valueof-和-tostring-的结果是什么","link":"#_20-和-的-valueof-和-tostring-的结果是什么","children":[]},{"level":2,"title":"21. 什么是假值对象？","slug":"_21-什么是假值对象","link":"#_21-什么是假值对象","children":[]},{"level":2,"title":"22. ~ 操作符的作用？","slug":"_22-操作符的作用","link":"#_22-操作符的作用","children":[]},{"level":2,"title":"23. 解析字符串中的数字和将字符串强制类型转换为数字的返回结果都是数字，它们之间的区别是什么？","slug":"_23-解析字符串中的数字和将字符串强制类型转换为数字的返回结果都是数字-它们之间的区别是什么","link":"#_23-解析字符串中的数字和将字符串强制类型转换为数字的返回结果都是数字-它们之间的区别是什么","children":[]},{"level":2,"title":"24. + 操作符什么时候用于字符串的拼接？","slug":"_24-操作符什么时候用于字符串的拼接","link":"#_24-操作符什么时候用于字符串的拼接","children":[]},{"level":2,"title":"25. 什么情况下会发生布尔值的隐式强制类型转换？","slug":"_25-什么情况下会发生布尔值的隐式强制类型转换","link":"#_25-什么情况下会发生布尔值的隐式强制类型转换","children":[]},{"level":2,"title":"==26. || 和 && 操作符的返回值？==","slug":"_26-和-操作符的返回值","link":"#_26-和-操作符的返回值","children":[]},{"level":2,"title":"27. Symbol 值的强制类型转换？","slug":"_27-symbol-值的强制类型转换","link":"#_27-symbol-值的强制类型转换","children":[]},{"level":2,"title":"28. == 操作符的强制类型转换规则？","slug":"_28-操作符的强制类型转换规则","link":"#_28-操作符的强制类型转换规则","children":[]},{"level":2,"title":"29. 如何将字符串转化为数字，例如 '12.3b'?","slug":"_29-如何将字符串转化为数字-例如-12-3b","link":"#_29-如何将字符串转化为数字-例如-12-3b","children":[]},{"level":2,"title":"30. 如何将浮点数点左边的数每三位添加一个逗号，如 12000000.11 转化为『12,000,000.11』?","slug":"_30-如何将浮点数点左边的数每三位添加一个逗号-如-12000000-11-转化为『12-000-000-11』","link":"#_30-如何将浮点数点左边的数每三位添加一个逗号-如-12000000-11-转化为『12-000-000-11』","children":[]},{"level":2,"title":"31. 常用正则表达式","slug":"_31-常用正则表达式","link":"#_31-常用正则表达式","children":[]},{"level":2,"title":"32. 生成随机数的各种方法？","slug":"_32-生成随机数的各种方法","link":"#_32-生成随机数的各种方法","children":[]},{"level":2,"title":"33. 如何实现数组的随机排序？","slug":"_33-如何实现数组的随机排序","link":"#_33-如何实现数组的随机排序","children":[]},{"level":2,"title":"34. javascript 创建对象的几种方式？","slug":"_34-javascript-创建对象的几种方式","link":"#_34-javascript-创建对象的几种方式","children":[]},{"level":2,"title":"35. JavaScript 继承的几种实现方式？","slug":"_35-javascript-继承的几种实现方式","link":"#_35-javascript-继承的几种实现方式","children":[]},{"level":2,"title":"36. 寄生式组合继承的实现？","slug":"_36-寄生式组合继承的实现","link":"#_36-寄生式组合继承的实现","children":[]},{"level":2,"title":"37. Javascript 的作用域链？","slug":"_37-javascript-的作用域链","link":"#_37-javascript-的作用域链","children":[]},{"level":2,"title":"==38. 谈谈 this 对象的理解——this指向的四种情况==","slug":"_38-谈谈-this-对象的理解——this指向的四种情况","link":"#_38-谈谈-this-对象的理解——this指向的四种情况","children":[]},{"level":2,"title":"39. eval 是做什么的？——字符串 -> 代码","slug":"_39-eval-是做什么的-——字符串-代码","link":"#_39-eval-是做什么的-——字符串-代码","children":[]},{"level":2,"title":"40. 什么是 DOM 和 BOM？","slug":"_40-什么是-dom-和-bom","link":"#_40-什么是-dom-和-bom","children":[]},{"level":2,"title":"41. 写一个通用的事件侦听器函数。","slug":"_41-写一个通用的事件侦听器函数。","link":"#_41-写一个通用的事件侦听器函数。","children":[]},{"level":2,"title":"==42. 事件是什么？IE 与火狐的事件机制有什么区别？ 如何阻止冒泡？==","slug":"_42-事件是什么-ie-与火狐的事件机制有什么区别-如何阻止冒泡","link":"#_42-事件是什么-ie-与火狐的事件机制有什么区别-如何阻止冒泡","children":[]},{"level":2,"title":"43. 三种事件模型是什么？","slug":"_43-三种事件模型是什么","link":"#_43-三种事件模型是什么","children":[]},{"level":2,"title":"44. 事件委派是什么？","slug":"_44-事件委派是什么","link":"#_44-事件委派是什么","children":[]},{"level":2,"title":"45. [\\"1\\", \\"2\\", \\"3\\"].map(parseInt) 答案是多少？","slug":"_45-1-2-3-map-parseint-答案是多少","link":"#_45-1-2-3-map-parseint-答案是多少","children":[]},{"level":2,"title":"46. 什么是闭包，为什么要用它？","slug":"_46-什么是闭包-为什么要用它","link":"#_46-什么是闭包-为什么要用它","children":[]},{"level":2,"title":"47. javascript 代码中的 \\"use strict\\"; 是什么意思 ? 使用它区别是什么？","slug":"_47-javascript-代码中的-use-strict-是什么意思-使用它区别是什么","link":"#_47-javascript-代码中的-use-strict-是什么意思-使用它区别是什么","children":[]},{"level":2,"title":"48. 如何判断一个对象是否属于某个类？","slug":"_48-如何判断一个对象是否属于某个类","link":"#_48-如何判断一个对象是否属于某个类","children":[]},{"level":2,"title":"49. instanceof 的作用？","slug":"_49-instanceof-的作用","link":"#_49-instanceof-的作用","children":[]},{"level":2,"title":"50. new 操作符具体干了什么呢？如何实现？","slug":"_50-new-操作符具体干了什么呢-如何实现","link":"#_50-new-操作符具体干了什么呢-如何实现","children":[]},{"level":2,"title":"51. Javascript 中，有一个函数，执行对象查找时，永远不会去查找原型，这个函数是？","slug":"_51-javascript-中-有一个函数-执行对象查找时-永远不会去查找原型-这个函数是","link":"#_51-javascript-中-有一个函数-执行对象查找时-永远不会去查找原型-这个函数是","children":[]},{"level":2,"title":"52. 对于 JSON 的了解？","slug":"_52-对于-json-的了解","link":"#_52-对于-json-的了解","children":[]},{"level":2,"title":"53. [].forEach.call($$(\\"\\"),function(a){a.style.outline=\\"1px solid #\\"+(~~(Math.random()(1<<24))).toString(16)}) 能解释一下这段代码的意思吗？（暂时不看）","slug":"_53-foreach-call-function-a-a-style-outline-1px-solid-math-random-1-24-tostring-16-能解释一下这段代码的意思吗-暂时不看","link":"#_53-foreach-call-function-a-a-style-outline-1px-solid-math-random-1-24-tostring-16-能解释一下这段代码的意思吗-暂时不看","children":[]},{"level":2,"title":"==54. js 延迟加载的方式有哪些？==","slug":"_54-js-延迟加载的方式有哪些","link":"#_54-js-延迟加载的方式有哪些","children":[]},{"level":2,"title":"55. Ajax 是什么? 如何创建一个 Ajax？","slug":"_55-ajax-是什么-如何创建一个-ajax","link":"#_55-ajax-是什么-如何创建一个-ajax","children":[]},{"level":2,"title":"==56. 谈一谈浏览器的缓存机制？==","slug":"_56-谈一谈浏览器的缓存机制","link":"#_56-谈一谈浏览器的缓存机制","children":[]},{"level":2,"title":"57. Ajax 解决浏览器缓存问题？","slug":"_57-ajax-解决浏览器缓存问题","link":"#_57-ajax-解决浏览器缓存问题","children":[]},{"level":2,"title":"==58. 同步和异步的区别？==","slug":"_58-同步和异步的区别","link":"#_58-同步和异步的区别","children":[]},{"level":2,"title":"59. 什么是浏览器的同源政策？","slug":"_59-什么是浏览器的同源政策","link":"#_59-什么是浏览器的同源政策","children":[]},{"level":2,"title":"==60. 如何解决跨域问题？==","slug":"_60-如何解决跨域问题","link":"#_60-如何解决跨域问题","children":[]},{"level":2,"title":"61. 服务器代理转发时，该如何处理 cookie？","slug":"_61-服务器代理转发时-该如何处理-cookie","link":"#_61-服务器代理转发时-该如何处理-cookie","children":[]},{"level":2,"title":"62. 简单谈一下 cookie ？","slug":"_62-简单谈一下-cookie","link":"#_62-简单谈一下-cookie","children":[]},{"level":2,"title":"63. 模块化开发怎么做？","slug":"_63-模块化开发怎么做","link":"#_63-模块化开发怎么做","children":[]},{"level":2,"title":"64. js 的几种模块规范？","slug":"_64-js-的几种模块规范","link":"#_64-js-的几种模块规范","children":[]},{"level":2,"title":"65. AMD 和 CMD 规范的区别？","slug":"_65-amd-和-cmd-规范的区别","link":"#_65-amd-和-cmd-规范的区别","children":[]},{"level":2,"title":"66. ES6 模块与 CommonJS 模块、AMD、CMD 的差异。","slug":"_66-es6-模块与-commonjs-模块、amd、cmd-的差异。","link":"#_66-es6-模块与-commonjs-模块、amd、cmd-的差异。","children":[]},{"level":2,"title":"67. requireJS 的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）","slug":"_67-requirejs-的核心原理是什么-如何动态加载的-如何避免多次加载的-如何-缓存的","link":"#_67-requirejs-的核心原理是什么-如何动态加载的-如何避免多次加载的-如何-缓存的","children":[]},{"level":2,"title":"68. JS 模块加载器的轮子怎么造，也就是如何实现一个模块加载器？","slug":"_68-js-模块加载器的轮子怎么造-也就是如何实现一个模块加载器","link":"#_68-js-模块加载器的轮子怎么造-也就是如何实现一个模块加载器","children":[]},{"level":2,"title":"69. ES6 怎么写 class，class出现的意义是什么？","slug":"_69-es6-怎么写-class-class出现的意义是什么","link":"#_69-es6-怎么写-class-class出现的意义是什么","children":[]},{"level":2,"title":"70. documen.write 和 innerHTML 的区别？","slug":"_70-documen-write-和-innerhtml-的区别","link":"#_70-documen-write-和-innerhtml-的区别","children":[]},{"level":2,"title":"==71. DOM 操作——怎样添加、移除、移动、复制、创建和查找节点？==","slug":"_71-dom-操作——怎样添加、移除、移动、复制、创建和查找节点","link":"#_71-dom-操作——怎样添加、移除、移动、复制、创建和查找节点","children":[]},{"level":2,"title":"72. innerHTML 与 outerHTML 的区别？","slug":"_72-innerhtml-与-outerhtml-的区别","link":"#_72-innerhtml-与-outerhtml-的区别","children":[]},{"level":2,"title":"==73. call() 、 apply() 和 bind() 的区别？==","slug":"_73-call-、-apply-和-bind-的区别","link":"#_73-call-、-apply-和-bind-的区别","children":[]},{"level":2,"title":"74. JavaScript 类数组对象的定义？","slug":"_74-javascript-类数组对象的定义","link":"#_74-javascript-类数组对象的定义","children":[]},{"level":2,"title":"==75. 数组和对象有哪些原生方法，列举一下？==","slug":"_75-数组和对象有哪些原生方法-列举一下","link":"#_75-数组和对象有哪些原生方法-列举一下","children":[]},{"level":2,"title":"76. 数组的 fill 方法？","slug":"_76-数组的-fill-方法","link":"#_76-数组的-fill-方法","children":[]},{"level":2,"title":"77. [,,,] 的长度？","slug":"_77-的长度","link":"#_77-的长度","children":[]},{"level":2,"title":"78. JavaScript 中的作用域与变量声明提升？","slug":"_78-javascript-中的作用域与变量声明提升","link":"#_78-javascript-中的作用域与变量声明提升","children":[]},{"level":2,"title":"79. 如何编写高性能的 Javascript ？","slug":"_79-如何编写高性能的-javascript","link":"#_79-如何编写高性能的-javascript","children":[]},{"level":2,"title":"==80. 简单介绍一下 V8 引擎的垃圾回收机制==","slug":"_80-简单介绍一下-v8-引擎的垃圾回收机制","link":"#_80-简单介绍一下-v8-引擎的垃圾回收机制","children":[]},{"level":2,"title":"81. 哪些操作会造成内存泄漏？","slug":"_81-哪些操作会造成内存泄漏","link":"#_81-哪些操作会造成内存泄漏","children":[]},{"level":2,"title":"82. 需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？（暂时不看）","slug":"_82-需求-实现一个页面操作不会整页刷新的网站-并且能在浏览器前进、后退时正确响应。给出你的技术实现方案-暂时不看","link":"#_82-需求-实现一个页面操作不会整页刷新的网站-并且能在浏览器前进、后退时正确响应。给出你的技术实现方案-暂时不看","children":[]},{"level":2,"title":"83. 如何判断当前脚本运行在浏览器还是 node 环境中？（阿里）","slug":"_83-如何判断当前脚本运行在浏览器还是-node-环境中-阿里","link":"#_83-如何判断当前脚本运行在浏览器还是-node-环境中-阿里","children":[]},{"level":2,"title":"84. 把 script 标签放在页面的最底部的 body 封闭之前和封闭之后有什么区别？浏览器会如何解析它们？","slug":"_84-把-script-标签放在页面的最底部的-body-封闭之前和封闭之后有什么区别-浏览器会如何解析它们","link":"#_84-把-script-标签放在页面的最底部的-body-封闭之前和封闭之后有什么区别-浏览器会如何解析它们","children":[]},{"level":2,"title":"85. 移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？","slug":"_85-移动端的点击事件的有延迟-时间是多久-为什么会有-怎么解决这个延时","link":"#_85-移动端的点击事件的有延迟-时间是多久-为什么会有-怎么解决这个延时","children":[]},{"level":2,"title":"86. 什么是“前端路由”？什么时候适合使用“前端路由”？“前端路由”有哪些优点和缺点？","slug":"_86-什么是-前端路由-什么时候适合使用-前端路由-前端路由-有哪些优点和缺点","link":"#_86-什么是-前端路由-什么时候适合使用-前端路由-前端路由-有哪些优点和缺点","children":[]},{"level":2,"title":"87. 如何测试前端代码么？ 知道 BDD, TDD, Unit Test 么？ 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)？","slug":"_87-如何测试前端代码么-知道-bdd-tdd-unit-test-么-知道怎么测试你的前端工程么-mocha-sinon-jasmin-qunit","link":"#_87-如何测试前端代码么-知道-bdd-tdd-unit-test-么-知道怎么测试你的前端工程么-mocha-sinon-jasmin-qunit","children":[]},{"level":2,"title":"88. 检测浏览器版本有哪些方式？","slug":"_88-检测浏览器版本有哪些方式","link":"#_88-检测浏览器版本有哪些方式","children":[]},{"level":2,"title":"89. 什么是 Polyfill ？","slug":"_89-什么是-polyfill","link":"#_89-什么是-polyfill","children":[]},{"level":2,"title":"90. 使用 JS 实现获取文件扩展名？","slug":"_90-使用-js-实现获取文件扩展名","link":"#_90-使用-js-实现获取文件扩展名","children":[]},{"level":2,"title":"==91. 介绍一下 js 的节流与防抖？==","slug":"_91-介绍一下-js-的节流与防抖","link":"#_91-介绍一下-js-的节流与防抖","children":[]},{"level":2,"title":"92. Object.is() 与原来的比较操作符 \\"= = =\\"、\\"= =\\" 的区别？","slug":"_92-object-is-与原来的比较操作符-、-的区别","link":"#_92-object-is-与原来的比较操作符-、-的区别","children":[]},{"level":2,"title":"93. escape,encodeURI,encodeURIComponent 有什么区别？（不看）","slug":"_93-escape-encodeuri-encodeuricomponent-有什么区别-不看","link":"#_93-escape-encodeuri-encodeuricomponent-有什么区别-不看","children":[]},{"level":2,"title":"94. Unicode 和 UTF-8 之间的关系？","slug":"_94-unicode-和-utf-8-之间的关系","link":"#_94-unicode-和-utf-8-之间的关系","children":[]},{"level":2,"title":"==95. JS的运行机制是什么？==","slug":"_95-js的运行机制是什么","link":"#_95-js的运行机制是什么","children":[]},{"level":2,"title":"==96. js 中的深浅拷贝实现？==","slug":"_96-js-中的深浅拷贝实现","link":"#_96-js-中的深浅拷贝实现","children":[]},{"level":2,"title":"97. 手写 call、apply 及 bind 函数","slug":"_97-手写-call、apply-及-bind-函数","link":"#_97-手写-call、apply-及-bind-函数","children":[]},{"level":2,"title":"98. 函数柯里化的实现","slug":"_98-函数柯里化的实现","link":"#_98-函数柯里化的实现","children":[]},{"level":2,"title":"99. 为什么 0.1 + 0.2 != 0.3？如何解决这个问题？","slug":"_99-为什么-0-1-0-2-0-3-如何解决这个问题","link":"#_99-为什么-0-1-0-2-0-3-如何解决这个问题","children":[]},{"level":2,"title":"100. 原码、反码和补码的介绍","slug":"_100-原码、反码和补码的介绍","link":"#_100-原码、反码和补码的介绍","children":[]},{"level":2,"title":"101. toPrecision 和 toFixed 和 Math.round 的区别？","slug":"_101-toprecision-和-tofixed-和-math-round-的区别","link":"#_101-toprecision-和-tofixed-和-math-round-的区别","children":[]},{"level":2,"title":"102. 什么是 XSS 攻击？如何防范 XSS 攻击？","slug":"_102-什么是-xss-攻击-如何防范-xss-攻击","link":"#_102-什么是-xss-攻击-如何防范-xss-攻击","children":[]},{"level":2,"title":"103. 什么是 CSP？","slug":"_103-什么是-csp","link":"#_103-什么是-csp","children":[]},{"level":2,"title":"104. 什么是 CSRF 攻击？如何防范 CSRF 攻击？","slug":"_104-什么是-csrf-攻击-如何防范-csrf-攻击","link":"#_104-什么是-csrf-攻击-如何防范-csrf-攻击","children":[]},{"level":2,"title":"105. 什么是 Samesite Cookie 属性？","slug":"_105-什么是-samesite-cookie-属性","link":"#_105-什么是-samesite-cookie-属性","children":[]},{"level":2,"title":"106. 什么是点击劫持？如何防范点击劫持？","slug":"_106-什么是点击劫持-如何防范点击劫持","link":"#_106-什么是点击劫持-如何防范点击劫持","children":[]},{"level":2,"title":"107. SQL 注入攻击？","slug":"_107-sql-注入攻击","link":"#_107-sql-注入攻击","children":[]},{"level":2,"title":"108. 什么是 MVVM？比之 MVC 有什么区别？","slug":"_108-什么是-mvvm-比之-mvc-有什么区别","link":"#_108-什么是-mvvm-比之-mvc-有什么区别","children":[]},{"level":2,"title":"==109. vue 双向数据绑定原理？==","slug":"_109-vue-双向数据绑定原理","link":"#_109-vue-双向数据绑定原理","children":[]},{"level":2,"title":"110. Object.defineProperty()介绍？","slug":"_110-object-defineproperty-介绍","link":"#_110-object-defineproperty-介绍","children":[]},{"level":2,"title":"111. 使用 Object.defineProperty() 来进行数据劫持有什么缺点？","slug":"_111-使用-object-defineproperty-来进行数据劫持有什么缺点","link":"#_111-使用-object-defineproperty-来进行数据劫持有什么缺点","children":[]},{"level":2,"title":"==112. 什么是 Virtual DOM？为什么 Virtual DOM 比原生 DOM 快？==","slug":"_112-什么是-virtual-dom-为什么-virtual-dom-比原生-dom-快","link":"#_112-什么是-virtual-dom-为什么-virtual-dom-比原生-dom-快","children":[]},{"level":2,"title":"==113. 如何比较两个 DOM 树的差异（diff算法）？==","slug":"_113-如何比较两个-dom-树的差异-diff算法","link":"#_113-如何比较两个-dom-树的差异-diff算法","children":[]},{"level":2,"title":"114. 什么是 requestAnimationFrame ？","slug":"_114-什么是-requestanimationframe","link":"#_114-什么是-requestanimationframe","children":[]},{"level":2,"title":"115. 谈谈你对 webpack 的看法","slug":"_115-谈谈你对-webpack-的看法","link":"#_115-谈谈你对-webpack-的看法","children":[]},{"level":2,"title":"116. offsetWidth/offsetHeight,clientWidth/clientHeight 与 scrollWidth/scrollHeight 的区别？","slug":"_116-offsetwidth-offsetheight-clientwidth-clientheight-与-scrollwidth-scrollheight-的区别","link":"#_116-offsetwidth-offsetheight-clientwidth-clientheight-与-scrollwidth-scrollheight-的区别","children":[]},{"level":2,"title":"117. 谈一谈你理解的函数式编程？","slug":"_117-谈一谈你理解的函数式编程","link":"#_117-谈一谈你理解的函数式编程","children":[]},{"level":2,"title":"118. 异步编程的实现方式？","slug":"_118-异步编程的实现方式","link":"#_118-异步编程的实现方式","children":[]},{"level":2,"title":"119. Js 动画与 CSS 动画区别及相应实现","slug":"_119-js-动画与-css-动画区别及相应实现","link":"#_119-js-动画与-css-动画区别及相应实现","children":[]},{"level":2,"title":"120. get 请求传参长度的误区","slug":"_120-get-请求传参长度的误区","link":"#_120-get-请求传参长度的误区","children":[]},{"level":2,"title":"121. URL 和 URI 的区别？","slug":"_121-url-和-uri-的区别","link":"#_121-url-和-uri-的区别","children":[]},{"level":2,"title":"122. get 和 post 请求在缓存方面的区别","slug":"_122-get-和-post-请求在缓存方面的区别","link":"#_122-get-和-post-请求在缓存方面的区别","children":[]},{"level":2,"title":"123. 图片的懒加载和预加载","slug":"_123-图片的懒加载和预加载","link":"#_123-图片的懒加载和预加载","children":[]},{"level":2,"title":"124. mouseover 和 mouseenter 的区别？","slug":"_124-mouseover-和-mouseenter-的区别","link":"#_124-mouseover-和-mouseenter-的区别","children":[]},{"level":2,"title":"125. js 拖拽功能的实现","slug":"_125-js-拖拽功能的实现","link":"#_125-js-拖拽功能的实现","children":[]},{"level":2,"title":"126. 为什么使用 setTimeout 实现 setInterval？怎么模拟？","slug":"_126-为什么使用-settimeout-实现-setinterval-怎么模拟","link":"#_126-为什么使用-settimeout-实现-setinterval-怎么模拟","children":[]},{"level":2,"title":"127. let 和 const 的注意点？","slug":"_127-let-和-const-的注意点","link":"#_127-let-和-const-的注意点","children":[]},{"level":2,"title":"128. 什么是 rest 参数？","slug":"_128-什么是-rest-参数","link":"#_128-什么是-rest-参数","children":[]},{"level":2,"title":"129. 什么是尾调用，使用尾调用有什么好处？","slug":"_129-什么是尾调用-使用尾调用有什么好处","link":"#_129-什么是尾调用-使用尾调用有什么好处","children":[]},{"level":2,"title":"130. Symbol 类型的注意点？","slug":"_130-symbol-类型的注意点","link":"#_130-symbol-类型的注意点","children":[]},{"level":2,"title":"131. Set 和 WeakSet 结构？","slug":"_131-set-和-weakset-结构","link":"#_131-set-和-weakset-结构","children":[]},{"level":2,"title":"132. Map 和 WeakMap 结构？","slug":"_132-map-和-weakmap-结构","link":"#_132-map-和-weakmap-结构","children":[]},{"level":2,"title":"133. 什么是 Proxy ？","slug":"_133-什么是-proxy","link":"#_133-什么是-proxy","children":[]},{"level":2,"title":"134. Reflect 对象创建目的？","slug":"_134-reflect-对象创建目的","link":"#_134-reflect-对象创建目的","children":[]},{"level":2,"title":"135. require 模块引入的查找方式？","slug":"_135-require-模块引入的查找方式","link":"#_135-require-模块引入的查找方式","children":[]},{"level":2,"title":"136. 什么是 Promise 对象，什么是 Promises/A+ 规范？","slug":"_136-什么是-promise-对象-什么是-promises-a-规范","link":"#_136-什么是-promise-对象-什么是-promises-a-规范","children":[]},{"level":2,"title":"137. 手写一个 Promise","slug":"_137-手写一个-promise","link":"#_137-手写一个-promise","children":[]},{"level":2,"title":"138. 如何检测浏览器所支持的最小字体大小？","slug":"_138-如何检测浏览器所支持的最小字体大小","link":"#_138-如何检测浏览器所支持的最小字体大小","children":[]},{"level":2,"title":"139. 怎么做 JS 代码 Error 统计？","slug":"_139-怎么做-js-代码-error-统计","link":"#_139-怎么做-js-代码-error-统计","children":[]},{"level":2,"title":"140. 单例模式模式是什么？","slug":"_140-单例模式模式是什么","link":"#_140-单例模式模式是什么","children":[]},{"level":2,"title":"141. 策略模式是什么？","slug":"_141-策略模式是什么","link":"#_141-策略模式是什么","children":[]},{"level":2,"title":"142. 代理模式是什么？","slug":"_142-代理模式是什么","link":"#_142-代理模式是什么","children":[]},{"level":2,"title":"143. 中介者模式是什么？","slug":"_143-中介者模式是什么","link":"#_143-中介者模式是什么","children":[]},{"level":2,"title":"144. 适配器模式是什么？","slug":"_144-适配器模式是什么","link":"#_144-适配器模式是什么","children":[]},{"level":2,"title":"145. 观察者模式和发布订阅模式有什么不同？","slug":"_145-观察者模式和发布订阅模式有什么不同","link":"#_145-观察者模式和发布订阅模式有什么不同","children":[]},{"level":2,"title":"146. Vue 的生命周期是什么？","slug":"_146-vue-的生命周期是什么","link":"#_146-vue-的生命周期是什么","children":[]},{"level":2,"title":"147. Vue 的各个生命阶段是什么？","slug":"_147-vue-的各个生命阶段是什么","link":"#_147-vue-的各个生命阶段是什么","children":[]},{"level":2,"title":"148. Vue 组件间的通信（数据传递）方式？","slug":"_148-vue-组件间的通信-数据传递-方式","link":"#_148-vue-组件间的通信-数据传递-方式","children":[]},{"level":2,"title":"==149. computed 和 watch 的差异？==","slug":"_149-computed-和-watch-的差异","link":"#_149-computed-和-watch-的差异","children":[]},{"level":2,"title":"150. vue-router 中的导航钩子函数","slug":"_150-vue-router-中的导航钩子函数","link":"#_150-vue-router-中的导航钩子函数","children":[]},{"level":2,"title":"151. $route 和 $router 的区别？","slug":"_151-route-和-router-的区别","link":"#_151-route-和-router-的区别","children":[]},{"level":2,"title":"152. vue 常用的修饰符？","slug":"_152-vue-常用的修饰符","link":"#_152-vue-常用的修饰符","children":[]},{"level":2,"title":"153. vue 中 key 值的作用？","slug":"_153-vue-中-key-值的作用","link":"#_153-vue-中-key-值的作用","children":[]},{"level":2,"title":"154. computed 和 watch 区别？","slug":"_154-computed-和-watch-区别","link":"#_154-computed-和-watch-区别","children":[]},{"level":2,"title":"155. keep-alive 组件有什么作用？","slug":"_155-keep-alive-组件有什么作用","link":"#_155-keep-alive-组件有什么作用","children":[]},{"level":2,"title":"156. vue 中 mixin 和 mixins 区别？","slug":"_156-vue-中-mixin-和-mixins-区别","link":"#_156-vue-中-mixin-和-mixins-区别","children":[]},{"level":2,"title":"157. 开发中常用的几种 Content-Type ？","slug":"_157-开发中常用的几种-content-type","link":"#_157-开发中常用的几种-content-type","children":[]},{"level":2,"title":"158. 如何封装一个 javascript 的类型判断函数？","slug":"_158-如何封装一个-javascript-的类型判断函数","link":"#_158-如何封装一个-javascript-的类型判断函数","children":[]},{"level":2,"title":"159. 如何判断一个对象是否为空对象？","slug":"_159-如何判断一个对象是否为空对象","link":"#_159-如何判断一个对象是否为空对象","children":[]},{"level":2,"title":"160. 使用闭包实现每隔一秒打印 1,2,3,4","slug":"_160-使用闭包实现每隔一秒打印-1-2-3-4","link":"#_160-使用闭包实现每隔一秒打印-1-2-3-4","children":[]},{"level":2,"title":"161. 手写一个 jsonp","slug":"_161-手写一个-jsonp","link":"#_161-手写一个-jsonp","children":[]},{"level":2,"title":"162. 手写一个观察者模式？","slug":"_162-手写一个观察者模式","link":"#_162-手写一个观察者模式","children":[]},{"level":2,"title":"163. EventEmitter 实现","slug":"_163-eventemitter-实现","link":"#_163-eventemitter-实现","children":[]},{"level":2,"title":"164. 一道常被人轻视的前端 JS 面试题","slug":"_164-一道常被人轻视的前端-js-面试题","link":"#_164-一道常被人轻视的前端-js-面试题","children":[]},{"level":2,"title":"165. 如何确定页面的可用性时间，什么是 Performance API？","slug":"_165-如何确定页面的可用性时间-什么是-performance-api","link":"#_165-如何确定页面的可用性时间-什么是-performance-api","children":[]},{"level":2,"title":"166. js 中的命名规则","slug":"_166-js-中的命名规则","link":"#_166-js-中的命名规则","children":[]},{"level":2,"title":"167. js 语句末尾分号是否可以省略？","slug":"_167-js-语句末尾分号是否可以省略","link":"#_167-js-语句末尾分号是否可以省略","children":[]},{"level":2,"title":"168. Object.assign()","slug":"_168-object-assign","link":"#_168-object-assign","children":[]},{"level":2,"title":"169. Math.ceil 和 Math.floor","slug":"_169-math-ceil-和-math-floor","link":"#_169-math-ceil-和-math-floor","children":[]},{"level":2,"title":"170. js for 循环注意点","slug":"_170-js-for-循环注意点","link":"#_170-js-for-循环注意点","children":[]},{"level":2,"title":"171. 一个列表，假设有 100000 个数据，这个该怎么办？","slug":"_171-一个列表-假设有-100000-个数据-这个该怎么办","link":"#_171-一个列表-假设有-100000-个数据-这个该怎么办","children":[]},{"level":2,"title":"172. js 中倒计时的纠偏实现？","slug":"_172-js-中倒计时的纠偏实现","link":"#_172-js-中倒计时的纠偏实现","children":[]},{"level":2,"title":"173. 进程间通信的方式？","slug":"_173-进程间通信的方式","link":"#_173-进程间通信的方式","children":[]},{"level":2,"title":"174. 如何查找一篇英文文章中出现频率最高的单词？","slug":"_174-如何查找一篇英文文章中出现频率最高的单词","link":"#_174-如何查找一篇英文文章中出现频率最高的单词","children":[]},{"level":2,"title":"175.vue中的data为什么被设计为函数？","slug":"_175-vue中的data为什么被设计为函数","link":"#_175-vue中的data为什么被设计为函数","children":[]}],"git":{},"filePathRelative":"js/README.md"}`);export{l as data};
